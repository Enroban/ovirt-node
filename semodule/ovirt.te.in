# vim: sw=4 sts=4 et

policy_module(ovirt, 1.0)

# Existence of types can be checked at runtime using:
# seinfo -t<type>
gen_require(`
@SEMODULE_NOT_EL6@    type NetworkManager_t;
@SEMODULE_WITH_SYSTEMD@    type systemd_localed_t;
@SEMODULE_WITH_SYSTEMD@    type systemd_unit_file_t;
@SEMODULE_WITH_SYSTEMD@    type systemd_localed_t;
@SEMODULE_WITH_SYSTEMD@    type systemd_unit_file_t;
@SEMODULE_WITH_SYSTEMD@    type systemd_hostnamed_t;
    type etc_t;
    type device_t;
    type dmesg_t;
    type getty_t;
    type init_t;
    type initrc_t;
    type initrc_tmp_t;
    type init_t;
    type iscsid_t;
    type iscsi_var_lib_t;
    type loadkeys_t;
    type local_login_t;
    type logrotate_t;
    type mount_t;
    type net_conf_t;
    type nfs_t;
    type policykit_t;
    type sanlock_t;
    type setfiles_t;
    type shadow_t;
    type sshd_t;
    type svirt_t;
    type syslogd_t;
    type tuned_t;
    type tmpfs_t;
    type unconfined_t;
    type unlabeled_t;
    type user_tmpfs_t;
    type user_tmp_t;
    type var_log_t;
    type var_lib_t;
    type virt_cache_t;
    type virtd_exec_t;
    type virtd_t;
    type virt_etc_t;
    type virt_var_run_t;
')

#======== systemd_logind_t ==========
optional_policy(`
    require {
        type systemd_logind_t;
        type unconfined_service_t;
    }
    allow systemd_logind_t unconfined_service_t:dbus send_msg;
')

#============= plymouthd_t ===========
optional_policy(`
    require {
        type devpts_t;
        type plymouthd_t;
    }
    allow plymouthd_t devpts_t:chr_file setattr;
    allow plymouthd_t tmpfs_t:dir search;
')

#============= brctl_t ==============
optional_policy(`
    require {
        type brctl_t;
    }
    allow brctl_t self:capability sys_module;
')

#============= updpwd_t ==============
require {
    type updpwd_t;
}
allow updpwd_t tmpfs_t:dir { search write add_name remove_name };
allow updpwd_t device_t:dir { search write add_name remove_name };

#============= gssd_t ==============
optional_policy(`
    require {
        type gssd_t;
    }
    allow gssd_t tmpfs_t:dir search;
')

#============= ldconfig_t ==============
optional_policy(`
    require {
        type ldconfig_t;
    }
    allow ldconfig_t tmpfs_t:dir search;
')

#============= avahi_t ==============
optional_policy(`
    require {
        type avahi_t;
    }
    allow avahi_t tmpfs_t:file { read getattr open };
')


#============= collectd_t ==============
optional_policy(`
    require {
        type collectd_t;
        type passwd_file_t;
    }
    allow collectd_t passwd_file_t:file { open read };
    allow collectd_t initrc_t:unix_stream_socket connectto;
    allow collectd_t virtd_exec_t:file getattr;
    allow collectd_t virt_etc_t:file read;
    allow collectd_t virt_var_run_t:sock_file write;
    allow collectd_t virtd_t:unix_stream_socket connectto;
')


#============= dnsmasq_t ==============
optional_policy(`
    require {
        type dnsmasq_t;
    }
    allow dnsmasq_t tmpfs_t:dir search;
')


#============= sanlock_t ==============
allow sanlock_t tmpfs_t:dir search;
allow sanlock_t nfs_t:dir search;
allow sanlock_t nfs_t:file open;


#============= systemd_localed_t ==============
@SEMODULE_WITH_SYSTEMD@allow systemd_localed_t etc_t:file { write rename create setattr };
@SEMODULE_WITH_SYSTEMD@allow systemd_localed_t init_t:dbus send_msg;
@SEMODULE_WITH_SYSTEMD@allow systemd_localed_t initrc_t:dbus send_msg;
@SEMODULE_WITH_SYSTEMD@allow systemd_localed_t systemd_unit_file_t:service start;
@SEMODULE_WITH_SYSTEMD@allow systemd_localed_t ovirt_t:dbus send_msg;

#============= systemd_hostnamectl ==============
@SEMODULE_WITH_SYSTEMD@allow systemd_hostnamed_t tmpfs_t:dir { write remove_name search add_name };
@SEMODULE_WITH_SYSTEMD@allow systemd_hostnamed_t tmpfs_t:file { unlink };
@SEMODULE_WITH_SYSTEMD@allow systemd_hostnamed_t ovirt_t:dbus send_msg;
@SEMODULE_WITH_SYSTEMD@allow systemd_hostnamed_t user_tmp_t:file { unlink open };

#============= hald_t ==============
optional_policy(`
    require {
        type hald_t;
    }
    allow hald_t ovirt_t:dbus send_msg;
')

#============= useradd_t ==============
optional_policy(`
    require {
        type useradd_t;
    }
    allow useradd_t tmpfs_t:dir { write remove_name add_name };
    allow useradd_t tmpfs_t:file { write getattr link create unlink open };
')

#============= initrc_t ==============
optional_policy(`
    require {
        type sshd_net_t;
    }
    allow initrc_t sshd_net_t:process dyntransition;
')
allow initrc_t unconfined_t:process dyntransition;


#============= loadkeys_t ==============
require {
    type console_device_t;
    type tmp_t;
}
allow loadkeys_t initrc_tmp_t:file { open read };
allow loadkeys_t tmp_t:file { open read };
allow loadkeys_t console_device_t:chr_file open;


#============= local_login_t ==============
require {
    type local_login_t;
}

optional_policy(`
    require {
        type passwd_file_t;
    }
    allow local_login_t passwd_file_t:file write;
')
allow local_login_t chkpwd_t:process { siginh rlimitinh noatsecure };
allow local_login_t shadow_t:file { write rename create unlink setattr };
allow local_login_t tmpfs_t:dir { write remove_name add_name };
allow local_login_t var_log_t:file { open write create read lock };
allow local_login_t var_log_t:dir { write add_name };
optional_policy(`
    require { type passwd_file_t; }
    allow local_login_t passwd_file_t:file write;
')


#============= mount_t ==============
allow mount_t shadow_t:file mounton;
allow mount_t unlabeled_t:filesystem remount;


#============= policykit_t ==============
allow policykit_t ovirt_t:dbus send_msg;


#============= setfiles_t ==============
require {
    type dhcpc_t;
}
allow setfiles_t initrc_tmp_t:file append;
allow setfiles_t net_conf_t:file read;
allow setfiles_t dhcpc_t:udp_socket { read write };


#============= sshd_t ==============
allow sshd_t local_login_t:process signull;


#============= sshd_net_t ==============
optional_policy(`
    require {
        type sshd_net_t;
    }
    allow sshd_net_t initrc_t:process sigchld;
')


#============= snmpd_t ==============
require {
    type snmpd_t;
}
allow snmpd_t device_t:sock_file write;
allow snmpd_t ovirt_t:unix_dgram_socket sendto;
allow snmpd_t tmpfs_t:file { read getattr open };


#============= sshd_t ==============
allow sshd_t var_log_t:file { read open write };
allow sshd_t device_t:sock_file write;
allow sshd_t ovirt_t:unix_dgram_socket sendto;


#============= svirt_t ==============
require {
    type bin_t;
}
allow svirt_t ovirt_t:unix_stream_socket connectto;
allow svirt_t initrc_t:unix_stream_socket connectto;
allow svirt_t sanlock_t:unix_stream_socket connectto;
allow svirt_t nfs_t:file open;
allow svirt_t bin_t:file entrypoint;
allow svirt_t var_log_t:dir { write add_name };
allow svirt_t var_log_t:file { read write create open };

#============= syslogd_t ==============
allow syslogd_t var_lib_t:file { write getattr open };
allow syslogd_t tmpfs_t:file { read getattr open };


#============= sysstat_t ==============
require {
    type sysstat_t;
    type admin_home_t;
}
allow sysstat_t admin_home_t:dir { search getattr };
allow sysstat_t tmpfs_t:dir search;
allow sysstat_t var_lib_t:file { read append };
allow sysstat_t var_log_t:file { open read };


#============= tuned_t ==============
allow tuned_t ovirt_t:dbus send_msg;
allow tuned_t init_t:dbus send_msg;
allow tuned_t initrc_t:dbus send_msg;


#============= iscsid_t ==============
# Remove this block once the bug is solved
# Bug-Url: https://bugzilla.redhat.com/show_bug.cgi?id=1025401
allow iscsid_t iscsi_var_lib_t:dir { write remove_name create add_name rmdir };
allow iscsid_t iscsi_var_lib_t:file { write create unlink };
allow iscsid_t iscsi_var_lib_t:lnk_file { create unlink };


optional_policy(`
    require {
        type kdumpctl_tmp_t;
    }
    allow iscsid_t kdumpctl_tmp_t:fifo_file write;
')

optional_policy(`
    require {
        type modules_dep_t;
    }
    allow iscsid_t modules_dep_t:file { read open getattr };
')

#============= ping_t ==============
require {
    type ping_t;
}
allow ping_t nfs_t:file read;


#============= dhcpc_t ==============
optional_policy(`
    require {
        type dhcpc_t;
        type tmpfs_t;
    }
    allow dhcpc_t tmpfs_t:dir { write add_name read };
    allow dhcpc_t tmpfs_t:file { write create open getattr read unlink };
    allow dhcpc_t user_tmpfs_t:file { read getattr open };
    allow dhcpc_t hostname_t:process { siginh noatsecure rlimitinh };
')

optional_policy(`
    require {
        type dhcpc_t;
        type ifconfig_t;
        type netutils_t;
        type setfiles_t;
    }
    allow dhcpc_t ifconfig_t:process { siginh rlimitinh noatsecure };
    allow dhcpc_t netutils_t:process { siginh rlimitinh noatsecure };
    allow dhcpc_t setfiles_t:process { siginh rlimitinh noatsecure };
')

optional_policy(`
    require {
        type dhcpc_t;
        type random_device_t;
        type tmpfs_t;
    }
    allow dhcpc_t random_device_t:chr_file read;
    allow dhcpc_t tmpfs_t:dir remove_name;
')


#============= hostname_t ==============
require {
    type hostname_t;
}
allow hostname_t tmpfs_t:dir search;
allow hostname_t dhcpc_t:udp_socket { read write };


#============= systemd_sysctl_t ==============
optional_policy(`
    require {
        type systemd_sysctl_t;
        type tmpfs_t;
    }
    allow systemd_sysctl_t tmpfs_t:dir { getattr search };
')


#============= systemd_passwd_agent_t ==============
optional_policy(`
    require {
        type systemd_passwd_agent_t;
    }
    allow systemd_passwd_agent_t tmpfs_t:dir search;
')

#============= kdump_t ==============
optional_policy(`
    require {
        type kdump_t;
        type system_map_t;
    }
    allow kdump_t system_map_t: file { read open };
')

#============= systemd_localed_t ==============
optional_policy(`
    require {
        type systemd_localed_t;
        type tmpfs_t;
        type security_t;
    }
    allow systemd_localed_t tmpfs_t:dir { write remove_name add_name search };
    allow systemd_localed_t security_t:file { open read };
')


#============= rhsmcertd_t ==============
optional_policy(`
    require {
        type rhsmcertd_t;
    }
    allow rhsmcertd_t tmpfs_t:dir search;
    allow rhsmcertd_t var_log_t:file open;
')


#============= sblim_sfcbd_t ==============
optional_policy(`
    require {
        type sblim_sfcbd_t;
        type virt_var_run_t;
        type virt_etc_t;
        type virtd_t;
        type chkpwd_exec_t;
        type user_tmp_t;
    }
    allow sblim_sfcbd_t chkpwd_exec_t:file { read execute open execute_no_trans };
    allow sblim_sfcbd_t self:capability { setuid audit_write dac_override };
    allow sblim_sfcbd_t self:netlink_audit_socket { nlmsg_relay create read write };
    allow sblim_sfcbd_t shadow_t:file { read getattr open };
    allow sblim_sfcbd_t user_tmp_t:sock_file { write unlink };
    allow sblim_sfcbd_t virt_etc_t:file { read open };
    allow sblim_sfcbd_t virt_var_run_t:dir search;
    allow sblim_sfcbd_t virt_var_run_t:sock_file write;

    allow sblim_sfcbd_t virtd_t:unix_stream_socket connectto;
')

#============= irqbalance_t ==============
optional_policy(`
    require {
        type irqbalance_t;
        type tmpfs_t;
    }
    allow irqbalance_t tmpfs_t:dir search;
')


#============= ksmtuned_t ==============
optional_policy(`
    require {
        type ksmtuned_t;
        type tmpfs_t;
    }
    allow ksmtuned_t tmpfs_t:dir search;
')


#============= mcelog_t ==============
optional_policy(`
    require {
        type mcelog_t;
        type tmpfs_t;
    }
    allow mcelog_t tmpfs_t:dir search;
')


#============= ntpd_t ==============
optional_policy(`
    require {
        type init_tmp_t;
        type ntpd_t;
    }
    allow ntpd_t init_tmp_t:dir { write add_name remove_name };
    allow ntpd_t init_tmp_t:file { create open unlink write };
')


#============= dmesg_t ==============
allow dmesg_t tmpfs_t:dir search;


#============= iptables_t ==============
optional_policy(`
    require {
        type iptables_t;
        type insmod_t;
        type var_lib_t;
    }
    allow iptables_t tmpfs_t:dir search;
    allow iptables_t insmod_t:process { siginh rlimitinh noatsecure };
    allow iptables_t user_tmpfs_t:file { read open getattr };
    allow iptables_t var_lib_t:dir { write remove_name create add_name };
    allow iptables_t var_lib_t:file { write create unlink open };
')

#============= init_t ==============
allow init_t svirt_t:process transition;

#============= rpcbind_t ==============
optional_policy(`
    require {
        type rpcbind_t;
    }
    allow rpcbind_t self:udp_socket listen;
    allow rpcbind_t self:capability chown;
    allow rpcbind_t tmpfs_t:dir search;
')


#============= rpcd_t ==============
require {
    type rpcd_t;
}
allow rpcd_t self:udp_socket listen;


#============= ssh_keygen_t ==============
require {
    type ssh_keygen_t;
}
allow ssh_keygen_t tmpfs_t:dir search;


#============= chkpwd_t ==============
require {
type chkpwd_t;
type tty_device_t;
type file_t;
}
allow chkpwd_t tty_device_t:chr_file { read write };
allow chkpwd_t tmpfs_t:dir search;
allow chkpwd_t file_t:file { read open getattr };


#============= passwd_t ==============
require {
type passwd_t;
}
allow passwd_t file_t:file { read open getattr };
allow passwd_t self:capability sys_admin;
allow passwd_t tmpfs_t:dir { remove_name add_name write };
allow passwd_t tmpfs_t:file { write getattr link create unlink open };
#============= getty_t ==============
require {
  type getty_t;
}
allow getty_t local_login_t:process { siginh rlimitinh noatsecure };
allow getty_t var_log_t:file { open write };
allow getty_t tmpfs_t:dir search;


#============= ifconfig_t ==============
require {
    type ifconfig_t;
}
allow ifconfig_t dhcpc_t:udp_socket { read write };
allow ifconfig_t tmpfs_t:dir search;


#============= netutils_t ==============
require {
    type netutils_t;
}
allow netutils_t dhcpc_t:udp_socket { read write };
allow netutils_t tmpfs_t:dir search;


#============= NetworkManager_t ==============
optional_policy(`
    require {
        type NetworkManager_t;
    }
    allow NetworkManager_t tmpfs_t:dir { read write add_name remove_name };
    allow NetworkManager_t tmpfs_t:file { read write getattr open create rename unlink };
')


#============= sshd_keygen_t ==============
optional_policy(`
    require {
        type ssh_keygen_t;
        type sshd_keygen_t;
        type tmpfs_t;
        type plymouth_exec_t;
    }
    allow sshd_keygen_t tmpfs_t:dir { search };
    allow sshd_keygen_t setfiles_t:process { siginh rlimitinh noatsecure };
    allow sshd_keygen_t ssh_keygen_t:process { siginh rlimitinh noatsecure };
    allow sshd_keygen_t plymouth_exec_t:file execute;
')


#============= mandb_t ==============
optional_policy(`
    require {
        type mandb_t;
    }
    allow mandb_t admin_home_t:dir search;
')


#============= logrotate_t ==============
allow logrotate_t var_lib_t:file write;
allow logrotate_t virt_cache_t:dir { read getattr write remove_name add_name };
allow logrotate_t virt_cache_t:file { rename setattr read create getattr write ioctl unlink open };


#============= firewalld_t ==============
optional_policy(`
    require {
        type firewalld_t;
        type iptables_t;
    }
    allow firewalld_t ovirt_t:dbus send_msg;
    allow firewalld_t init_t:dbus send_msg;
    allow firewalld_t iptables_t:process { siginh noatsecure rlimitinh };
')


#============= wdmd_t ==============
optional_policy(`
    require {
        type wdmd_t;
        type device_t;
    }
    allow wdmd_t device_t:file unlink;
    allow wdmd_t device_t:sock_file write;
    allow wdmd_t ovirt_t:unix_dgram_socket sendto;
')


#
# Transitions
#
type ovirt_t;
type ovirt_exec_t;
allow ovirt_t unconfined_t:process transition;
init_daemon_domain(ovirt_t, ovirt_exec_t)
unconfined_domain(ovirt_t)
unconfined_domain(mount_t)
